// TODO Separar lo que es general de lo ques particular del demo

@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,300);

$color-background:          #002235;
$color-background-env:      #002a42;
$color-text:                #7cdbf3;
$color-teal:                #7dbdc3;
$color-teal-dark:           #005c66;
$color-violet:              #a18fff;
$color-violet-dark:         #582fc0;
$color-orange:              #f7bd7f;
$color-orange-dark:         #b35c00;
$color-yellow:              #f0ab00;
$color-yellow-dark:         #b58100;
$color-red:                 #ce0000;
$color-red-dark:            #8b0000;
$color-blue:                #00b9e4;
$color-blue-dark:           #008bad;
$color-green:               #92d400;
$color-green-dark:          #2d7623;
$font-weight-light:         300;
$font-weight-normal:        400;
$font-weight-bold:          600;
$font-size-base:            12px;
$easeInOutBack: cubic-bezier(0.68, -0.55, 0.265, 1.55);

// $position: 375px, 400px, 200px, 225px, 425px, 0,  525px, 25px, 450px,275px, 300px, 100px,   550px,  475px, 500px, 175px, 250px, 325px,  575px, 600px,350px, 125px, 150px,50px, 75px, 625px, 650px, 675px;

// Animations =======================


@keyframes loading {
  0% {
    transform: scale3d(0,0,0);
  } 100% {
    transform: scale3d(1, 1, 1);
    filter: opacity(0);
  }
}

@keyframes commit-move {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(100%, 0, 0);
  }
}

@keyframes commit-move-prod {
  0% {
    transform: translate3d(0, 0, 0);
  } 100% {
    transform: translate3d(50%, 0, 0);
  }
}

@keyframes pending{
  1%{
    transform:translate3d(0,-2px,0);
  }
  5%{
    transform:translate3d(0,3px,0);
  }
  7%{
    transform:translate3d(0,-1px,0);
    box-shadow: 0 0 10px $color-blue;
  }
  10%{
    transform:translate3d(0,2px,0);
  }
  14%{
    transform:translate3d(0,-1px,0);
  }
  15%{
    transform:translate3d(0,0px,0);
  }

  23%{
    transform:translate3d(0,0px,0);
  }
  24%{
    transform:translate3d(2px,0,0);
  }
  26%{
    transform:translate3d(5px,0,0);
  }
  28%{
    transform:translate3d(1px,0,0);
    box-shadow: 0 0 10px $color-blue;
  }
  31%{
    transform:translate3d(4px,0,0);
  }
  35%{
    transform:translate3d(0px,0,0);
  }

  100%{
  }
}

@keyframes pulse-red{
  to{
    box-shadow: 0 0 10px $color-blue;
  }
}

html{
  height: 100%;
}

body{
  background:
  linear-gradient(to right,$color-background 70%, transparent),
  linear-gradient($color-background 18px, transparent 18px) 0 -2px,
  linear-gradient(90deg,  $color-background 18px, transparent 0px) -2px 0;
  background-color: darken($color-blue-dark, 20%);
  background-size: 100% 100%, 20px 20px, 20px 20px;
  color: $color-text;
  font-family: 'Open Sans', sans-serif;
  font-weight: $font-weight-normal;
  font-size: $font-size-base;
  margin: 0;
  height: 100%;
  display: flex;
  align-items: center;
  overflow-x: hidden;
}

#__bs_notify__{
  display: none!important;
}

a{
  color: $color-text;
}

// Add Microservice ==============

.add-microservice{
  display: flex;
  align-items: center;
  position: absolute;
  right: 20px;
  top: 20px;
  i{
    filter: opacity(.6);
    padding: 0;
    font-size: $font-size-base * 2.4;
    margin-left: 10px;
    line-height: 36px;
    transition: .2s all ease-in-out;
  }
  form{
    filter: opacity(0);
    transition: .4s all ease-in-out;
    overflow: auto;
    zoom: 1;
  }
  input{
    border: 1px solid $color-text;
    background: rgba(255,255,255,.05);
    font-size: $font-size-base * 1.2;
    line-height: 34px;
    float: left;
    transition: .2s all ease-in-out;
    &[type="text"]{
      width: 300px;
      border-radius: 3px 0 0 3px;
      padding: 0 5px;
      font-weight: $font-weight-light;
      &:placeholder{
        color: darken($color-text, 40%);
      }
    }
    &[type="submit"]{
      background: $color-text;
      color: $color-background;
      border-radius: 0 3px 3px 0;
      padding: 0 10px;
      font-weight: $font-weight-bold;
      &:hover{
        background: lighten($color-text, 20%);
        box-shadow: 0 0 10px $color-blue;
      }
    }
  }
  &:hover{
    i{
      filter: opacity(1);
    }
    form{
      filter: opacity(1);
    }
  }
}

// Container ==============

.container{
  width: 60%;
  &:hover .microservice{
    filter: blur(5px) opacity(.5);
    &:hover{
      filter: blur(0px);
    }
  }
}

// Microservice ==============

.microservice{
  cursor: pointer;
  transition: all .3s ease;
  position: relative;
  display: flex;
  align-items: center;
  margin-bottom: 10px;

  &.microservice-large, &.microservice-large:hover{
//    display: none;
    background: $color-background;
    position: absolute;
    width: calc(100vw - 40px);
    height: calc(100vh - 80px);
    padding: 40px 20px;
    top: 0;
    left: 0;
    z-index: 90000;
    margin-bottom: 0px;

    &.microservice-large-35{
      .commit-container{
        @for $i from 1 through 34 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-34{
      .commit-container{
        @for $i from 1 through 33 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-33{
      .commit-container{
        @for $i from 1 through 32 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-32{
      .commit-container{
        @for $i from 1 through 31 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-31{
      .commit-container{
        @for $i from 1 through 30 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-30{
      .commit-container{
        @for $i from 1 through 29 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-29{
      .commit-container{
        @for $i from 1 through 28 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-28{
      .commit-container{
        @for $i from 1 through 27 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-27{
      .commit-container{
        @for $i from 1 through 26 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-26{
      .commit-container{
        @for $i from 1 through 25 { //length($position)
          &:nth-of-type(27n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-25{
      .commit-container{
        @for $i from 1 through 24 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-24{
      .commit-container{
        @for $i from 1 through 23 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-23{
      .commit-container{
        @for $i from 1 through 22 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-22{
      .commit-container{
        @for $i from 1 through 21 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-21{
      .commit-container{
        @for $i from 1 through 20 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-20{
      .commit-container{
        @for $i from 1 through 19 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-19{
      .commit-container{
        @for $i from 1 through 18 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-18{
      .commit-container{
        @for $i from 1 through 17 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    &.microservice-large-17{
      .commit-container{
        @for $i from 1 through 16 { //length($position)
          &:nth-of-type(30n+#{$i}) {
            top: $i * 25px; //nth($position, $i)
          }
        }
      }
    }

    h1{
      left: 30px;
      top: 10px;
    }
    .stage, .stages{
      height: 100%!important;
      margin-bottom: 0;
    }
    .stages{
      width: 70%;
    }
    .stage{
      .commit-container{
        width: calc(100% - 26px);
        height: 20px!important;
        bottom: auto!important;
      }

    }
    .stage-lg{
      h2{display: block;}
      p{
        text-align: center;
        font-size: $font-size-base * 2;
        font-weight: $font-weight-light;
        strong{
          font-weight: $font-weight-bold;
        }
      }
      .commit-container{
//        animation-direction: reverse; WHY?
//        animation-play-state: paused; WHY?
        width: 100%;
        height: 100%!important;
        top: 0!important;
        .commit-large{
          transition: .2s linear;
          width: 240px;
          height: 240px;
          position: relative;
          left: -120px;
        }
      }
    }
    .commit{
      border-width:2px;
      height: 16px;
      width: 16px;
    }
  }

  &:hover, &.stages-expand {
    z-index: 1;
    .stage-lg h2{
      display: block;
    }
    .stage{
      height: 115px;
      .commit-container{
        height: 50%;
        top: 0;
        &:nth-child(odd){
          top: auto;
          bottom: 0;
        }
        &:only-of-type{
          height: 100%;
        }
      }
    }
    h1{
      top: -30px;
    }
    .microservice-actions{
      display: block;
    }
  }
  &:last-of-type .stage-lg h2{
    display: block;
  }
  h1{
    position: absolute;
    top:5px;
    left: 10px;
    margin: 0;
    font-size: $font-size-base;
    line-height: 25px;
    color: #fff;
    font-weight: $font-weight-bold;
    span{
      font-weight: $font-weight-light;
      color: rgba(255,255,255,0.7);
    }
  }
}

.microservice-actions{
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  z-index: 99;
  font-size: 14px;
  a{
    transition: .2s all ease-in-out;
    filter: opacity(.3);
    display: inline-block;
    padding: 3px;
    &:hover{
      filter: opacity(1);
    }
  }
}

// Stages ==============

.stages{
  width: 80%;
  display: flex;
}
// Stage ==============

.stage{
  flex: 1 0 10%;
  background-color: $color-background-env;
  border-radius: 2px;
  margin: 0px 10px 0px 10px;
  height: 50px;
  position: relative;
  transition: all .3s ease;
  padding-left: 3px;
  &:after{
    content: "";
    background-color: $color-background-env;
    mask-image: url(https://s3.amazonaws.com/passos/img/link.svg);
    width: 20px;
    height: 26px;
    position: absolute;
    right: -20px;
    top: 50%;
    transform: translateY(-50%);
  }
  &.stage-lg{
    margin-right: 0;
    margin-top: 0;
    height: 115px;
    background-image:
    linear-gradient(to left, $color-background 0%, transparent 80%);
    h2{
      display: none;
    }
    p{
      display: none;
    }
    &:after{
      display: none;
    }
    .commit-container{
      animation-name: commit-move-prod;
      &.success{
        filter: opacity(1);
      }
      &.commit-top, &.commit-bottom{
        height: 50%!important;
        top: 0;
      }
      &.commit-bottom{
        top: auto;
        bottom: 0;
      }
    }
  }
  h2{
    margin: 0;
    line-height: 25px;
    font-size: $font-size-base - 2;
    font-weight: normal;
    text-transform: uppercase;
    position: absolute;
    bottom: -25px;
  }
}

// Commit (AKA ball) ==============


.commit-container{
  animation-name: commit-move;
  animation-duration: 5s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  position: absolute;
  width: calc(100% - 46px);
  z-index: 20;
  height: 100%;
  transition: .3s all linear;
  display: flex;
  flex-direction: column;
  justify-content: center;

  &.hidden, &.not_executed, &.success{
    filter: opacity(0);
  }
   &.paused_pending_input, &.commit-red, &.aborted,  &.failed{
     animation-play-state: paused;
  }
   &.in_progress{
    animation-play-state: running;
  }
}

.commit{
  background-color: $color-violet;
  border: 3px solid $color-violet-dark;
  height: 34px;
  width: 34px;
  border-radius: 50%;
  display: block;
  .commit-blue &{
    background-color: $color-blue;
    border-color: $color-blue-dark;
  }
  .commit-green &{
    background-color: $color-green;
    border-color: $color-green-dark;
  }
  .commit-canary &{
    background-color: $color-yellow;
    border-color: $color-yellow-dark;
  }
  .commit-red &, .aborted &, .failed &{
    background-color: $color-red;
    border-color: $color-red-dark;
    animation: pulse-red 1s $easeInOutBack alternate infinite;
  }
  .paused_pending_input &{
    background-color: $color-teal;
    border-color: $color-teal-dark;
    animation: pending 3s ease-in-out infinite;
  }
//  .in_progress &{
//    animation-play-state: running;
//    animation: loading 1.0s infinite ease-in-out;
//  }
}


// WebGL Canvas ==============

#traffic {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 1000
}
.coord-display {
    position: absolute;
    bottom: 0;
    left: 48%;
    font-family: monospace;
}
#public-pipeline-live {
    position: absolute;
    top: 0;
    right: -10vw;
    visibility: hidden;
}
